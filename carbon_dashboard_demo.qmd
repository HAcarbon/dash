---
title: "HAU Carbon"
logo: "images/nl_agridat_hex_tp.png"
format: dashboard
#server: shiny
date-modified: 2024-03-27
orientation: columns
expandable: false
theme: flatly_edited.scss
embed-resources: true
resources: "docs/HAcarbon_master_2022.xlsx"

---

# Emissions Source

```{r Dashboard set up, echo=FALSE}
require(tidyverse)
require(knitr)
require(rmarkdown)
require(ggplot2)
require(DT)
require(bslib)
require(shiny)
require(bsicons)
require(htmltools)
require(readxl)

carbon_data <- read.csv("www/carbon_data_clean.csv") %>%
  mutate(lineitem_code = factor(
    lineitem_code,
    levels = c("DAIRY", "BEEF", "PIGS", "SHEEP", "WHOLE_FARM")
  ))

data_dict <- read_xlsx("www/HAcarbon_master_2022.xlsx", sheet = 5)

other_dict <- read_xlsx("www/HAcarbon_master_2022.xlsx", sheet = 6) 



## Theme ----  
theme_m.rl <- theme(
  # panel.grid.minor = element_blank(),
  # panel.grid.major = element_blank(),
  # panel.border = element_rect(size = 1,
  #                             color = "black"),
  axis.title.x = element_text(face = "bold",
                              size = 14,
                              vjust = 1.5),
  axis.text.x = element_text(
    angle = 0,
    vjust = 1,
    hjust = 0.5,
    size = 14
  ),
  axis.title.y = element_text(
    angle = 90,
    vjust = 2.5,
    hjust = 0.5,
    face = "bold",
    size = 14
  ),
  axis.text.y = element_text(size = 14),
  strip.text.x = element_text(size = 14),
  legend.position = "right",
  legend.title = element_text(size = 12, face = "bold"),
  legend.text = element_text(size = 12),
)

## Pallettes----

sector_pal <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442")
# , "#0072B2", "#D55E00", "#CC79A7") # can add more if needed later))

ghgpal <- c("#FE6100", "#FFB000", "#785EF0", "#DC267F")
                
my_comma <-
  scales::label_comma(accuracy = .1,
                      big.mark = ",",
                      decimal.mark = ".")

latest_year <- max(carbon_data$Year)
previous_year = latest_year - 1
s_cur_year <- latest_year-2000
s_prev_year <- previous_year - 2000

current_net_co2e <- as.numeric(as.list(
  carbon_data %>%
    filter(lineitem_code == "WHOLE_FARM" & Year == latest_year) %>%
    select(Year, lineitem_code, net_emissions_from_land_use) %>%
        select(net_emissions_from_land_use)
)[[1]]) / 1000000

co2e <- expression(Kt ~ CO ~ "[2]" ~ e)

tot_co2e_current <-
  as.numeric(
    as.list(
      carbon_data %>%
        filter(lineitem_code == "WHOLE_FARM") %>%
        select(Year, total_co2e_emissions_from_farming_kgco2e) %>%
                group_by(Year) %>%
        summarise(total_co2e = sum(
          total_co2e_emissions_from_farming_kgco2e
        )) %>%
        filter(Year == latest_year) %>%
        select(total_co2e)
    )[[1]]
  ) / 1000000

tot_co2e_prev <-
  as.numeric(
    as.list(
      carbon_data %>%
        filter(lineitem_code == "WHOLE_FARM") %>%
        select(Year, total_co2e_emissions_from_farming_kgco2e) %>%
                group_by(Year) %>%
        summarise(total_co2e = sum(
          total_co2e_emissions_from_farming_kgco2e
        )) %>%
        filter(Year == previous_year) %>%
        select(total_co2e)
    )[[1]]
  ) / 1000000

tot_co2e_20 <-
  as.numeric(
    as.list(
      carbon_data %>%
        filter(lineitem_code == "WHOLE_FARM") %>%
        select(Year, total_co2e_emissions_from_farming_kgco2e) %>%
        
        group_by(Year) %>%
        summarise(total_co2e = sum(
          total_co2e_emissions_from_farming_kgco2e
        )) %>%
        filter(Year == "2020") %>%
        select(total_co2e)
    )[[1]]
  ) / 1000000

carbon_reduction_current_previous <-
  tot_co2e_current - tot_co2e_prev

an_seq_forest_hedge_current <-
  as.numeric(as.list(
    carbon_data %>%
      filter(lineitem_code == "WHOLE_FARM") %>%
      group_by(Year) %>%
            summarise(
        tot_forest = sum(sequestration_by_forestry),
        tot_hedge = sum(sequestration_by_hedges),
        tot_seq = tot_forest + tot_hedge
      ) %>%
      filter(Year == latest_year) %>%
      select(tot_seq)
  )[[1]]) / 1000000

```

## Column {width="40%"}

### Row {title="summaryboxes" height="25%"}

```{r Total co2e produced in 2022 value boxa}
bslib::value_box(
  title = h1(HTML("Total CO<sub>2</sub>e"),latest_year),
  value = my_comma(tot_co2e_current),
  p(HTML("Kt CO<sub>2</sub>e")),
  theme = "warning"
  )
```

```{r net emissions in 2022 value boxa}
bslib::value_box(
  title = paste("Net emissions\n", latest_year),
  value = my_comma(current_net_co2e),
   p(HTML("Kt CO<sub>2</sub>e")),
  theme = "info"
  )

```

```{r net emissions reduction 21-22 value boxa}
bslib::value_box(
  title = paste("Net emission reduction \n ", s_prev_year, "/", s_cur_year ),
  value = my_comma(carbon_reduction_current_previous),
  p(HTML("Kt CO<sub>2</sub>e")),
  theme = "success"
  )

```

### Row {.tabset height="75%"}

```{r leaflet prepa}
#| context: setup

library(leaflet)


  office_icon = makeIcon("images/agridat.png","images/agridat.png", 50, 50)
  dairy_icon = makeIcon("images/dairy.png", "images/dairy.png", 50, 50 )
  robot_icon = makeIcon("images/robot.png","images/robot.png", 50, 50)
  beef_icon = makeIcon("images/beef.png","images/beef.png", 50, 50)
  sheep_icon = makeIcon("images/sheep.png","images/sheep.png", 50, 50)
  pig_icon = makeIcon("images/pig.png","images/pig.png", 50, 50)
  uni_icon = makeIcon("images/graduation-hat.png","images/graduation-hat.png",50,50)
  
  dairy_data <- carbon_data %>%
    filter(lineitem_code == "DAIRY" & Year == latest_year) 
  
  
 dairy_popup <- paste("<strong>Dairy Unit</strong>", "</br>", 
                      "Year:", latest_year, "</br>",
                      "Total CO<sub>2</sub>e :", my_comma(dairy_data$total_co2e_emissions_from_farming_kgco2e/1000), "t CO<sub>2</sub>e", "</br>",
   "Total direct carbon:", my_comma(dairy_data$co2_direct_co2_kgco2e/1000), "t CO<sub>2</sub>e", "</br>",
   "Total indirect carbon:",my_comma(dairy_data$co2_indirect_co2_kgco2e/1000), "t CO<sub>2</sub>e", "</br>",
   "Total methane:",my_comma(dairy_data$methane_total_kgco2e/1000), "t CO<sub>2</sub>e", "</br>",
   "Total nitrous oxide:", my_comma(dairy_data$nitrous_oxide_total_kgco2e/1000), "t CO<sub>2</sub>e")
 
 
   beef_data <- carbon_data %>%
    filter(lineitem_code == "BEEF" & Year == latest_year) 
  
  
 beef_popup <- paste("<strong>Beef Unit</strong>", "</br>", 
                      "Year:", latest_year, "</br>",
                      "Total CO<sub>2</sub>e :", my_comma(beef_data$total_co2e_emissions_from_farming_kgco2e/1000), "t CO<sub>2</sub>e", "</br>",
   "Total direct carbon:", my_comma(beef_data$co2_direct_co2_kgco2e/1000), "t CO<sub>2</sub>e", "</br>",
   "Total indirect carbon:",my_comma(beef_data$co2_indirect_co2_kgco2e/1000), "t CO<sub>2</sub>e", "</br>",
   "Total methane:",my_comma(beef_data$methane_total_kgco2e/1000), "t CO<sub>2</sub>e", "</br>",
   "Total nitrous oxide:", my_comma(beef_data$nitrous_oxide_total_kgco2e/1000), "t CO<sub>2</sub>e")
 
 sheep_data <- carbon_data %>%
    filter(lineitem_code == "SHEEP" & Year == latest_year) 
  
  
 sheep_popup <- paste("<strong>Sheep Unit</strong>", "</br>", 
                      "Year:", latest_year, "</br>",
                      "Total CO<sub>2</sub>e :", my_comma(sheep_data$total_co2e_emissions_from_farming_kgco2e/1000), "t CO<sub>2</sub>e", "</br>",
   "Total direct carbon:", my_comma(sheep_data$co2_direct_co2_kgco2e/1000), "t CO<sub>2</sub>e", "</br>",
   "Total indirect carbon:",my_comma(sheep_data$co2_indirect_co2_kgco2e/1000), "t CO<sub>2</sub>e", "</br>",
   "Total methane:",my_comma(sheep_data$methane_total_kgco2e/1000), "t CO<sub>2</sub>e", "</br>",
   "Total nitrous oxide:", my_comma(sheep_data$nitrous_oxide_total_kgco2e/1000), "t CO<sub>2</sub>e")

 pig_data <- carbon_data %>%
    filter(lineitem_code == "PIGS" & Year == latest_year) 
  
  
 pig_popup <- paste("<strong>Pig Unit</strong>", "</br>", 
                      "Year:", latest_year, "</br>",
                      "Total CO<sub>2</sub>e :", my_comma(pig_data$total_co2e_emissions_from_farming_kgco2e/1000), "t CO<sub>2</sub>e", "</br>",
   "Total direct carbon:", my_comma(pig_data$co2_direct_co2_kgco2e/1000), "t CO<sub>2</sub>e", "</br>",
   "Total indirect carbon:",my_comma(pig_data$co2_indirect_co2_kgco2e/1000), "t CO<sub>2</sub>e", "</br>",
   "Total methane:",my_comma(pig_data$methane_total_kgco2e/1000), "t CO<sub>2</sub>e", "</br>",
   "Total nitrous oxide:", my_comma(pig_data$nitrous_oxide_total_kgco2e/1000), "t CO<sub>2</sub>e")

 
 office_popup <- paste("Click the animal icons for info!")
```

```{r leafleta}
#| title: Map
 
leaflet(carbon_data) %>%
  fitBounds(lng1 = -2.435130, lat1 = 52.779020, lng2 = -2.429167, lat2 = 52.781648 ) %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addMarkers(lng=-2.427, lat=52.779, popup="Harper Adams University", icon = uni_icon) %>%
  addMarkers(lng=-2.434319, lat=52.780052, popup=dairy_popup, icon = dairy_icon ) %>%
  #addMarkers(lng=-2.432867, lat=52.780706, popup="Robot dairy unit", icon = robot_icon ) %>%
  addMarkers(lng=-2.430173, lat=52.779969, popup=pig_popup, icon = pig_icon) %>%
  addMarkers(lng=-2.430597, lat=52.780818, popup=sheep_popup, icon = sheep_icon) %>%
  addMarkers(lng=-2.430253, lat=52.780475, popup=beef_popup, icon = beef_icon) %>%
  
  addMarkers(lng=-2.432260, 
             lat=52.779504, 
             popup = office_popup, 
            icon = office_icon
            ) %>%
  
  
  # addMarkers(lng = -2.433879, lat = 52.780927, label = "Click on an icon for summary information", labelOptions = labelOptions(noHide = T)) %>%
  addScaleBar(position = "bottomright") 
 

```


::: {.card title="Useful information"}
**IPCC** :: Intergovernmental Panel on Climate Change.

**Carbon dioxide equivalent (CO**<sub>2</sub>e) :: The unit for measuring the **global warming potentials (GWP)** of greenhouse gases relative to that of carbon dioxide (CO<sub>2</sub>).

**Scope 1** :: Direct greenhouse gas emissions that occur from sources that are controlled or owned by an organisation (e.g., emissions from fuel combustion, vehicles etc.)

**Scope 2** :: Indirect greenhouse gas emissions associated with the purchase of electricity, steam, heat or cooling (e.g., emissions from electricity used in buildings)
:::

## Column {Width="60%"}

### Row

```{r}
#| context: setup


 c_data <-
  carbon_data %>% 
  select(c(results_id:total_co2e_emissions_from_farming_kgco2e)) %>%
  pivot_longer(-c(results_id:lineitem_code), names_to = "variables", values_to = "values" ) %>%
  select(-farm_area) %>%
  mutate(
     ghg_name_main = case_when(
      str_detect(variables, "co2_dir_e") ~ "CO2",
      str_detect(variables, "co2_direct") ~ "CO2",
      str_detect(variables, "co2_dir_ind") ~ "CO2",
      str_detect(variables, "co2_indirect") ~ "CO2",
      str_detect(variables, "co2_total") ~ "CO2",
      str_detect(variables, "methane_") ~ "Methane",
      str_detect(variables, "nitrous_oxide_") ~ "Nitrous oxide",
      str_detect(variables, "carbon_seq_") ~ "carbon seq",
      str_detect(variables, "co2e_") ~ "co2e"
    ),
    ghg_name_detail = case_when(
      str_detect(variables, "co2_dir_e") ~ "Direct CO2",
      str_detect(variables, "co2_direct") ~ "Direct CO2",
      str_detect(variables, "co2_dir_ind") ~ "Indirect CO2",
      str_detect(variables, "co2_indirect") ~ "Indirect CO2",
      str_detect(variables, "co2_total") ~ "Total CO2",
      str_detect(variables, "methane_") ~ "Methane",
      str_detect(variables, "nitrous_oxide_") ~ "Nitrous oxide",
      str_detect(variables, "carbon_seq_") ~ "Carbon seq",
      str_detect(variables, "co2e_") ~ "CO2e"
    ),
    ghg_summary = case_when(
      str_detect(variables, "total") ~ "total",
      str_detect(variables, "co2_direct") ~ "total",
      str_detect(variables, "co2_indirect") ~ "total",
     TRUE ~ "measure"
    ))
```

### Row {.tabset}

```{r}
#| title: Direct carbon 


# In theory I could get this to be interactive by replacing the filter bits with whatever is selected
dir_pal <- c("darkorange", "orangered", "indianred4", "firebrick", "tan3" ) # dark orange

  c_data %>% 
    #filter(lineitem_code == "DAIRY") %>% # 
    filter(lineitem_code != "WHOLE_FARM") %>%
    filter(ghg_summary == "measure") %>% 
    filter(ghg_name_detail == "Direct CO2") %>% 
    ggplot(aes(x = Year, y = values/1000000, fill = variables)) +
    geom_bar(position = "stack", stat = "identity") +
  scale_fill_manual(
    labels = c("Diesel", "Electricity", "Other fuels", "Renewable \nelectricity", "Renewable \nheat"),
    limits = c("co2_dir_emissions_diesel_kgco2e", "co2_dir_emissions_electricity_kgco2e", "co2_dir_emissions_other_fuels_kgco2e", "co2_dir_emissions_renewable_electricity_kgco2e", "co2_dir_emissions_renewable_heat_kgco2e"),
    values = dir_pal) +
    ylab(bquote(atop(bold(.(GHG~Emissions~(Kt~CO[2]~e)))))) +
    labs( x = "Year", fill = "Emissions source")+
    facet_wrap(~lineitem_code)

```

```{r}
#| title: Indirect carbon


# In theory I could get this to be interactive by replacing the filter bits with whatever is selected

indir_pal <- c("lightsalmon","orange","coral",  "chocolate1", "sienna3", "tomato3" ,"lightsalmon3", "orange3", "tomato",  "tan") # light orange


  c_data %>% 
    #filter(lineitem_code == "DAIRY") %>% # 
    filter(lineitem_code != "WHOLE_FARM") %>%
    filter(ghg_summary == "measure") %>% 
    filter(ghg_name_detail == "Indirect CO2") %>% 
    ggplot(aes(x = Year, y = values/1000000, fill = variables)) +
    geom_bar(position = "stack", stat = "identity") +
    scale_fill_manual(
    labels = c("Bedding", "Biochar", "Disposal of \ncarcasses", "Feed", "Fertiliser", "Lime", "Pesticides", "Refrigerant \nlosses", "Transport", "Waste"),
    limits = c("co2_dir_ind_emissions_bedding_kgco2e", "co2_dir_ind_emissions_biochar_kgco2e", "co2_dir_ind_emissions_disposal_of_carcasses_kgco2e", "co2_dir_ind_emissions_feed_kgco2e", "co2_dir_ind_emissions_fertiliser_kgco2e","co2_dir_ind_emissions_lime_kgco2e", "co2_dir_ind_emissions_pesticides_kgco2e", "co2_dir_ind_emissions_refrigerant_losses_kgco2e", "co2_dir_ind_emissions_transport_kgco2e", "co2_dir_ind_emissions_waste_kgco2e"),
    values = indir_pal) +
    ylab(bquote(atop(bold(.(GHG~Emissions~(Kt~CO[2]~e)))))) +
    labs( x = "Year", fill = "Emissions source")+
    facet_wrap(~lineitem_code)

```

```{r}
#| title: Methane


# In theory I could get this to be interactive by replacing the filter bits with whatever is selected

ch4_pal <-c("mediumorchid4","mediumorchid1") # purpleblue

  c_data %>% 
    #filter(lineitem_code == "DAIRY") %>% # 
    filter(lineitem_code != "WHOLE_FARM") %>%
    filter(ghg_summary == "measure") %>% 
    filter(ghg_name_detail == "Methane") %>% 
    ggplot(aes(x = Year, y = values/1000000, fill = variables)) +
    geom_bar(position = "stack", stat = "identity") +
    scale_fill_manual(
    labels = c("Fermentation, feed \n & digestion", "Manure management"),
    limits = c("methane_enteric_fermentation_feed_digestion_kgco2e", "methane_enteric_manure_mgmt_kgco2e"),
    values = ch4_pal) +
    ylab(bquote(atop(bold(.(GHG~Emissions~(Kt~CO[2]~e)))))) +
    labs( x = "Year", fill = "Emissions source")+
    facet_wrap(~lineitem_code)



```

```{r}
#| title: Nitrous oxide


n2o_pal <- c("maroon3","hotpink","lightpink") #pink purple


  c_data %>% 
    #filter(lineitem_code == "DAIRY") %>% # 
    filter(lineitem_code != "WHOLE_FARM") %>%
    filter(ghg_summary == "measure") %>% 
    filter(ghg_name_detail == "Nitrous oxide") %>% 
    ggplot(aes(x = Year, y = values/1000000, fill = variables)) +
    geom_bar(position = "stack", stat = "identity") +
    scale_fill_manual(
    labels = c("Inorganic and \nimported organic \nmanure", "Grazing manure \nmanagement", "Veg and crop \nN residues"),
    limits = c("nitrous_oxide_vol_inorganic_and_imp_org_man_soil_kgco2e", "nitrous_oxide_vol_grazing_dep_man_mgmt_org_man_soil_kgco2e", "nitrous_oxide_veg_crop_n_residues_kgco2e"),
    values = n2o_pal) +
    ylab(bquote(atop(bold(.(GHG~Emissions~(Kt~CO[2]~e)))))) +
    labs( x = "Year", fill = "Emissions source")+
    facet_wrap(~lineitem_code)



```

```{r}
#| title: Dairy
 
detail_ghg_pal <- c("darkorange", 
                    "orangered",
                    "indianred4", 
                    "firebrick", 
                    "tan3",# direct carbon
                   # "lightsalmon",
                    "orange",
                    "coral",
                    "chocolate1", 
                    "sienna3",
                    "tomato3" ,
                    "lightsalmon3",
                    "orange3",
                    "tomato", 
                    "tan", # indirect carbon light orange
                    "mediumorchid4",
                    "mediumorchid1", # methane purpleblue
                    "maroon3",
                    "hotpink",
                    "lightpink") # n2o pink purple



c_data %>% 
       filter(lineitem_code == "DAIRY") %>%
    filter(ghg_summary == "measure") %>% 
    filter(ghg_name_detail != "Carbon seq") %>% 
    ggplot(aes(x = Year, y = values/1000000, fill = variables)) +
    geom_bar(position = "stack", stat = "identity") +
     scale_fill_manual(
    labels = c("Diesel", 
               "Electricity", 
               "Other fuels",
               "Renewable electricity",
               "Renewable heat",
               "Bedding", 
               "Biochar", 
               "Disposal of carcasses", 
               "Feed", 
               "Fertiliser", 
               #"Lime", 
               "Pesticides", 
               "Refrigerant losses", 
               "Transport", "Waste",
               "Fermentation, feed & digestion",
               "Manure management",
               "Inorganic & imported organic manure",
               "Grazing manure management", 
               "Veg & crop N residues"),
     limits = c("co2_dir_emissions_diesel_kgco2e", 
                "co2_dir_emissions_electricity_kgco2e",
                "co2_dir_emissions_other_fuels_kgco2e", 
                "co2_dir_emissions_renewable_electricity_kgco2e",
                "co2_dir_emissions_renewable_heat_kgco2e",
                "co2_dir_ind_emissions_bedding_kgco2e",
                "co2_dir_ind_emissions_biochar_kgco2e",
                "co2_dir_ind_emissions_disposal_of_carcasses_kgco2e",
                "co2_dir_ind_emissions_feed_kgco2e",
                "co2_dir_ind_emissions_fertiliser_kgco2e",
               #"co2_dir_ind_emissions_lime_kgco2e",
                "co2_dir_ind_emissions_pesticides_kgco2e",
                "co2_dir_ind_emissions_refrigerant_losses_kgco2e",
                "co2_dir_ind_emissions_transport_kgco2e",
                "co2_dir_ind_emissions_waste_kgco2e",
                "methane_enteric_fermentation_feed_digestion_kgco2e",
                "methane_enteric_manure_mgmt_kgco2e",
                "nitrous_oxide_vol_inorganic_and_imp_org_man_soil_kgco2e",
                "nitrous_oxide_vol_grazing_dep_man_mgmt_org_man_soil_kgco2e",
                "nitrous_oxide_veg_crop_n_residues_kgco2e"),
       values = detail_ghg_pal) +
     ylab(bquote(atop(bold(.(GHG~Emissions~(Kt~CO[2]~e)))))) +
    labs( x = "Year", fill = "Emissions source")+
    facet_wrap(~ghg_name_detail)

```

```{r}
#| title: Beef
c_data %>% 
       filter(lineitem_code == "BEEF") %>%
    filter(ghg_summary == "measure") %>% 
    filter(ghg_name_detail != "Carbon seq") %>% 
    ggplot(aes(x = Year, y = values/1000000, fill = variables)) +
    geom_bar(position = "stack", stat = "identity") +
     scale_fill_manual(
    labels = c("Diesel", 
               "Electricity", 
               "Other fuels",
               "Renewable electricity",
               "Renewable heat",
               "Bedding", 
               "Biochar", 
               "Disposal of carcasses", 
               "Feed", 
               "Fertiliser", 
               #"Lime", 
               "Pesticides", 
               "Refrigerant losses", 
               "Transport", "Waste",
               "Fermentation, feed & digestion",
               "Manure management",
               "Inorganic & imported organic manure",
               "Grazing manure management", 
               "Veg & crop N residues"),
     limits = c("co2_dir_emissions_diesel_kgco2e", 
                "co2_dir_emissions_electricity_kgco2e",
                "co2_dir_emissions_other_fuels_kgco2e", 
                "co2_dir_emissions_renewable_electricity_kgco2e",
                "co2_dir_emissions_renewable_heat_kgco2e",
                "co2_dir_ind_emissions_bedding_kgco2e",
                "co2_dir_ind_emissions_biochar_kgco2e",
                "co2_dir_ind_emissions_disposal_of_carcasses_kgco2e",
                "co2_dir_ind_emissions_feed_kgco2e",
                "co2_dir_ind_emissions_fertiliser_kgco2e",
                #"co2_dir_ind_emissions_lime_kgco2e",
                "co2_dir_ind_emissions_pesticides_kgco2e",
                "co2_dir_ind_emissions_refrigerant_losses_kgco2e",
                "co2_dir_ind_emissions_transport_kgco2e",
                "co2_dir_ind_emissions_waste_kgco2e",
                "methane_enteric_fermentation_feed_digestion_kgco2e",
                "methane_enteric_manure_mgmt_kgco2e",
                "nitrous_oxide_vol_inorganic_and_imp_org_man_soil_kgco2e",
                "nitrous_oxide_vol_grazing_dep_man_mgmt_org_man_soil_kgco2e",
                "nitrous_oxide_veg_crop_n_residues_kgco2e"),
       values = detail_ghg_pal) +
    ylab(bquote(atop(bold(.(GHG~Emissions~(Kt~CO[2]~e)))))) +
    labs( x = "Year", fill = "Emissions source")+
    facet_wrap(~ghg_name_detail)


```

```{r}
#| title: Sheep

c_data %>% 
       filter(lineitem_code == "SHEEP") %>%
    filter(ghg_summary == "measure") %>% 
    filter(ghg_name_detail != "Carbon seq") %>% 
    ggplot(aes(x = Year, y = values/1000000, fill = variables)) +
    geom_bar(position = "stack", stat = "identity") +
     scale_fill_manual(
    labels = c("Diesel", 
               "Electricity", 
               "Other fuels",
               "Renewable electricity",
               "Renewable heat",
               "Bedding", 
               "Biochar", 
               "Disposal of carcasses", 
               "Feed", 
               "Fertiliser", 
               #"Lime", 
               "Pesticides", 
               "Refrigerant losses", 
               "Transport", "Waste",
               "Fermentation, feed & digestion",
               "Manure management",
               "Inorganic & imported organic manure",
               "Grazing manure management", 
               "Veg & crop N residues"),
     limits = c("co2_dir_emissions_diesel_kgco2e", 
                "co2_dir_emissions_electricity_kgco2e",
                "co2_dir_emissions_other_fuels_kgco2e", 
                "co2_dir_emissions_renewable_electricity_kgco2e",
                "co2_dir_emissions_renewable_heat_kgco2e",
                "co2_dir_ind_emissions_bedding_kgco2e",
                "co2_dir_ind_emissions_biochar_kgco2e",
                "co2_dir_ind_emissions_disposal_of_carcasses_kgco2e",
                "co2_dir_ind_emissions_feed_kgco2e",
                "co2_dir_ind_emissions_fertiliser_kgco2e",
                #"co2_dir_ind_emissions_lime_kgco2e",
                "co2_dir_ind_emissions_pesticides_kgco2e",
                "co2_dir_ind_emissions_refrigerant_losses_kgco2e",
                "co2_dir_ind_emissions_transport_kgco2e",
                "co2_dir_ind_emissions_waste_kgco2e",
                "methane_enteric_fermentation_feed_digestion_kgco2e",
                "methane_enteric_manure_mgmt_kgco2e",
                "nitrous_oxide_vol_inorganic_and_imp_org_man_soil_kgco2e",
                "nitrous_oxide_vol_grazing_dep_man_mgmt_org_man_soil_kgco2e",
                "nitrous_oxide_veg_crop_n_residues_kgco2e"),
       values = detail_ghg_pal) +
    ylab(bquote(atop(bold(.(GHG~Emissions~(Kt~CO[2]~e)))))) +
    labs( x = "Year", fill = "Emissions source")+
    facet_wrap(~ghg_name_detail)

```

```{r}
#| title: Pigs

c_data %>% 
       filter(lineitem_code == "PIGS") %>%
    filter(ghg_summary == "measure") %>% 
    filter(ghg_name_detail != "Carbon seq") %>% 
    ggplot(aes(x = Year, y = values/1000000, fill = variables)) +
    geom_bar(position = "stack", stat = "identity") +
     scale_fill_manual(
    labels = c("Diesel", 
               "Electricity", 
               "Other fuels",
               "Renewable electricity",
               "Renewable heat",
               "Bedding", 
               "Biochar", 
               "Disposal of carcasses", 
               "Feed", 
               "Fertiliser", 
               #"Lime", 
               "Pesticides", 
               "Refrigerant losses", 
               "Transport", "Waste",
               "Fermentation, feed & digestion",
               "Manure management",
               "Inorganic & imported organic manure",
               "Grazing manure management", 
               "Veg & crop N residues"),
     limits = c("co2_dir_emissions_diesel_kgco2e", 
                "co2_dir_emissions_electricity_kgco2e",
                "co2_dir_emissions_other_fuels_kgco2e", 
                "co2_dir_emissions_renewable_electricity_kgco2e",
                "co2_dir_emissions_renewable_heat_kgco2e",
                "co2_dir_ind_emissions_bedding_kgco2e",
                "co2_dir_ind_emissions_biochar_kgco2e",
                "co2_dir_ind_emissions_disposal_of_carcasses_kgco2e",
                "co2_dir_ind_emissions_feed_kgco2e",
                "co2_dir_ind_emissions_fertiliser_kgco2e",
                #"co2_dir_ind_emissions_lime_kgco2e",
                "co2_dir_ind_emissions_pesticides_kgco2e",
                "co2_dir_ind_emissions_refrigerant_losses_kgco2e",
                "co2_dir_ind_emissions_transport_kgco2e",
                "co2_dir_ind_emissions_waste_kgco2e",
                "methane_enteric_fermentation_feed_digestion_kgco2e",
                "methane_enteric_manure_mgmt_kgco2e",
                "nitrous_oxide_vol_inorganic_and_imp_org_man_soil_kgco2e",
                "nitrous_oxide_vol_grazing_dep_man_mgmt_org_man_soil_kgco2e",
                "nitrous_oxide_veg_crop_n_residues_kgco2e"),
       values = detail_ghg_pal) +
    ylab(bquote(atop(bold(.(GHG~Emissions~(Kt~CO[2]~e)))))) +
    labs( x = "Year", fill = "Emissions source")+
    facet_wrap(~ghg_name_detail)

```


# By sector

## Column {width="40%"}

### Row {height="25%"}

```{r Total co2e produced in 2022 value box}
bslib::value_box(
  title = h1(HTML("Total CO<sub>2</sub>e"),latest_year),
  value = my_comma(tot_co2e_current),
  p(HTML("Kt CO<sub>2</sub>e")),
  theme = "warning"
  )
```

```{r net emissions in 2022 value box}
bslib::value_box(
  title = paste("Net emissions\n", latest_year),
  value = my_comma(current_net_co2e),
   p(HTML("Kt CO<sub>2</sub>e")),
  theme = "info"
  )

```

```{r net emissions reduction 21-22 value box}
bslib::value_box(
  title = paste("Net emission reduction \n ", s_prev_year, "/", s_cur_year ),
  value = my_comma(carbon_reduction_current_previous),
  p(HTML("Kt CO<sub>2</sub>e")),
  theme = "success"
  )

```

### Row {.tabset height="75%"}

```{r leaflet}
#| title: Map
 
leaflet(carbon_data) %>%
  fitBounds(lng1 = -2.435130, lat1 = 52.779020, lng2 = -2.429167, lat2 = 52.781648 ) %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addMarkers(lng=-2.427, lat=52.779, popup="Harper Adams University", icon = uni_icon) %>%
  addMarkers(lng=-2.434319, lat=52.780052, popup=dairy_popup, icon = dairy_icon ) %>%
  #addMarkers(lng=-2.432867, lat=52.780706, popup="Robot dairy unit", icon = robot_icon ) %>%
  addMarkers(lng=-2.430173, lat=52.779969, popup=pig_popup, icon = pig_icon) %>%
  addMarkers(lng=-2.430597, lat=52.780818,, popup=sheep_popup, icon = sheep_icon) %>%
  addMarkers(lng=-2.430499, lat=52.780594, popup=beef_popup, icon = beef_icon) %>%
  addMarkers(lng=-2.432260, lat=52.779504, popup="Click here to view info", icon =office_icon) %>%
    # addMarkers(lng = -2.433879, lat = 52.780927, label = "Click on an icon for summary information", labelOptions = labelOptions(noHide = T)) %>%
  addScaleBar(position = "bottomright") 


```



## Column {.tabset width="60%"}

```{r total GHG emission graph}
#| title: Total GHG Emissions
#| fig-cap: The total annual tonnes of carbon dioxide equivalent emissions produced from the Harper Adams Future Farm for the years 2020 to 2022. Colours indicate the contribution of each sector to the total emission output. Equivalent emissions were calculated using the [IPCC AR5](https://ar5-syr.ipcc.ch/ipcc/ipcc/resources/pdf/IPCC_SynthesisReport.pdf) guidelines on Global Warming Potential (GWP) equivalents. 


carbon_data %>%
  mutate(carbon_equiv_tot = total_co2e_emissions_from_farming_kgco2e/1000000) %>%
  filter(lineitem_code != "WHOLE_FARM") %>%
ggplot( aes(x = Year, y = carbon_equiv_tot, fill = lineitem_code)) +
   geom_bar(position="stack", stat="identity") +
    scale_fill_manual(
    labels = c("Dairy", "Beef", "Pigs", "Sheep"),
    limits = c("DAIRY", "BEEF", "PIGS", "SHEEP"),
    values = sector_pal) +
  ylab(bquote(atop(bold(.(Total~Carbon~Equivalent~Emissions)), (bold(.(Kt~CO[2]~e)))))) +
  labs(
    x = "Year",
    fill = "Sector") + 
  theme_bw()+
  theme_m.rl
```

```{r direct carbon graph}
#| title: Direct Carbon
#| fig-cap: The total annual tonnes of direct (Scope 1) carbon dioxide emissions produced from the Harper Adams Future Farm for the years 2020 to 2022. Colours indicate the contribution of each sector to the total emission output. Equivalent emissions were calculated using the [IPCC AR5 report](https://ar5-syr.ipcc.ch/ipcc/ipcc/resources/pdf/IPCC_SynthesisReport.pdf) guidelines on Global Warming Potential (GWP) equivalents. 

carbon_data %>%
  mutate(direct_carbon_tot = co2_direct_co2_kgco2e/1000000) %>%
   filter(lineitem_code != "WHOLE_FARM") %>%
ggplot( aes(x = Year, y = direct_carbon_tot, fill = lineitem_code)) +
  geom_bar(position="stack", stat="identity") +
    scale_fill_manual(
    labels = c("Dairy", "Beef", "Pigs", "Sheep"),
    limits = c("DAIRY", "BEEF", "PIGS", "SHEEP"),
    values = sector_pal) +
  ylab(bquote(atop(bold(.(Direct~Carbon~Emissions)), (bold(.(Kt~CO[2]~e)))))) +
  # ylab(bquote(atop("Direct Carbon Emissions ", "(tonnes"~CO[2]~"e)"))) +
  labs(
       x = "Year",
       fill = "Sector") + 
  theme_bw()+
  theme_m.rl
```

```{r indirect carbon graph}
#| title: Indirect Carbon 
#| fig-cap: The total annual tonnes of indirect (Scope 2) carbon dioxide emissions produced from the Harper Adams Future Farm for the years 2020 to 2022. Colours indicate the contribution of each sector to the total emission output. Equivalent emissions were calculated using the [IPCC AR5 report](https://ar5-syr.ipcc.ch/ipcc/ipcc/resources/pdf/IPCC_SynthesisReport.pdf) guidelines on Global Warming Potential (GWP) equivalents. 


carbon_data %>%
  mutate(indirect_carbon_tot = co2_indirect_co2_kgco2e/1000000) %>%
   filter(lineitem_code != "WHOLE_FARM") %>%
ggplot( aes(x = Year, y = indirect_carbon_tot, fill = lineitem_code)) +
   geom_bar(position="stack", stat="identity") +
    scale_fill_manual(
    labels = c("Dairy", "Beef", "Pigs", "Sheep"),
    limits = c("DAIRY", "BEEF", "PIGS", "SHEEP"),
    values = sector_pal) +
  # ylab(bquote(atop("Indirect Carbon Emissions ", "(tonnes"~CO[2]~"e)"))) +
  ylab(bquote(atop(bold(.(Indirect~Carbon~Emissions)), (bold(.(Kt~CO[2]~e)))))) +
  labs( 
        x = "Year",
        fill = "Sector") + 
  theme_bw()+
  theme_m.rl
```

```{r methane graph}
#| title: Methane
#| fig-cap: The total annual tonnes of methane as carbon dioxide equivalent emissions produced from the Harper Adams Future Farm for the years 2020 to 2022. Colours indicate the contribution of each sector to the total emission output. Equivalent emissions were calculated using the [IPCC AR5 report](https://ar5-syr.ipcc.ch/ipcc/ipcc/resources/pdf/IPCC_SynthesisReport.pdf) guidelines on Global Warming Potential (GWP) equivalents. 


carbon_data %>%
  mutate(methane = methane_total_kgco2e/1000000) %>%
   filter(lineitem_code != "WHOLE_FARM") %>%
ggplot( aes(x = Year, y = methane, fill = lineitem_code)) +
   geom_bar(position="stack", stat="identity") +
    scale_fill_manual(
    labels = c("Dairy", "Beef", "Pigs", "Sheep"),
    limits = c("DAIRY", "BEEF", "PIGS", "SHEEP"),
    values = sector_pal) +
  # ylab(bquote(atop("Methane Emissions ", "(tonnes"~CO[2]~"e)"))) +
  ylab(bquote(atop(bold(.(Methane~Emissions)), (bold(.(Kt~CO[2]~e)))))) +
  labs(
        x = "Year",  
        fill = "Sector") + 
  theme_bw()+
  theme_m.rl
```

```{r nitrous oxide graph}
#| title: Nitrous Oxide
#| fig-cap: The total annual tonnes of nitrous oxide as carbon dioxide equivalent emissions produced from the Harper Adams Future Farm for the years 2020 to 2022. Colours indicate the contribution of each sector to the total emission output. Equivalent emissions were calculated using the [IPCC AR5 report](https://ar5-syr.ipcc.ch/ipcc/ipcc/resources/pdf/IPCC_SynthesisReport.pdf) guidelines on Global Warming Potential (GWP) equivalents. 

carbon_data %>%
  mutate(nitrous_oxide = nitrous_oxide_total_kgco2e/1000000) %>%
   filter(lineitem_code != "WHOLE_FARM") %>%
ggplot( aes(x = Year, y = nitrous_oxide, fill = lineitem_code)) +
   geom_bar(position="stack", stat="identity") +
    scale_fill_manual(
    labels = c("Dairy", "Beef", "Pigs", "Sheep"),
    limits = c("DAIRY", "BEEF", "PIGS", "SHEEP"),
    values = sector_pal) +
    # ylab(bquote(atop("Nitrous Oxide Emissions ", "(tonnes"~CO[2]~"e)"))) +
  ylab(bquote(atop(bold(.(Nitrous~Oxide~Emissions)), (bold(.(Kt~CO[2]~e)))))) +
  labs(
       x = "Year", 
       fill = "Sector") + 
  theme_bw() +
  theme_m.rl


```

```{r ghg contributions graph}
#| title: GHG contributions
#| fig-cap: The total annual tonnes of green house gas (GHG) emissions (based on GWP equivlaent calculations) produced per year on the Harper Adams Future Farm presenting the quantity of the four types of GHG recorded during teh carbon calculation. Colours represent different GHG types.Equivalent emissions were calculated using the [IPCC AR5 report](https://ar5-syr.ipcc.ch/ipcc/ipcc/resources/pdf/IPCC_SynthesisReport.pdf) guidelines on Global Warming Potential (GWP) equivalents. 

carbon_data %>% 
  rename(direct = co2_direct_co2_kgco2e,
         indirect = co2_indirect_co2_kgco2e, 
         methane = methane_total_kgco2e,
         nitrous_oxide = nitrous_oxide_total_kgco2e) %>%
  pivot_longer(-c(results_id:lineitem_code),   names_to = "ghg_type", values_to = "values") %>% 
filter(ghg_type == "direct" | ghg_type == "indirect" | ghg_type == "methane" | ghg_type == "nitrous_oxide") %>% 
  filter(lineitem_code == "WHOLE_FARM") %>% 
  # group_by(Year, ghg_type) %>%
  # summarise(emission = (sum(values))/1000) %>% 
mutate(emission = values/1000000) %>% 
  ggplot(aes(x = Year, y = emission, fill = ghg_type))+
  geom_bar(position = "stack", stat = "identity") +
  scale_fill_manual(
    labels = c("Direct carbon", "Indirect carbon", "Methane", "Nitrous oxide"),
    limits = c("direct", "indirect", "methane", "nitrous_oxide"),
    values = ghgpal) +
    # ylab(bquote(atop("Nitrous Oxide Emissions ", "(tonnes"~CO[2]~"e)"))) +
  ylab(bquote(atop(bold(.(GHG~Emissions)), (bold(.(Kt~CO[2]~e)))))) +
  labs(
       x = "Year", 
       fill = "GHG type") + 
  theme_bw() +
  theme_m.rl
  
```

```{r ghg contributions by sector graph}
#| title: GHG contributions by sector
#| fig-cap: The total annual tonnes of green house gas (GHG) emissions produced per year by the Harper Adams Future Farm showing contributions from individual sectors on the farm for each GHG type recorded. Colours indicate the contribution of each sector to the total emission output. Equivalent emissions were calculated using the [IPCC AR5 report](https://ar5-syr.ipcc.ch/ipcc/ipcc/resources/pdf/IPCC_SynthesisReport.pdf) guidelines on Global Warming Potential (GWP) equivalents. 

carbon_data %>% 
  rename('Direct carbon' = co2_direct_co2_kgco2e,
         'Indirect carbon' = co2_indirect_co2_kgco2e, 
         Methane = methane_total_kgco2e,
         'Nitrous oxide' = nitrous_oxide_total_kgco2e) %>%
  pivot_longer(-c(results_id:lineitem_code),   names_to = "ghg_type", values_to = "values") %>% 
filter(ghg_type == "Direct carbon" | ghg_type == "Indirect carbon" | ghg_type == "Methane" | ghg_type == "Nitrous oxide") %>% 
  filter(lineitem_code != "WHOLE_FARM") %>% 
  # group_by(Year, ghg_type) %>%
  # summarise(emission = (sum(values))/1000) %>% 
mutate(emission = values/1000000) %>% 
  ggplot(aes(x = Year, y = emission, fill = lineitem_code))+
  geom_bar(position = "stack", stat = "identity") +
  facet_wrap(~ghg_type) + 
  scale_fill_manual(
    labels = c("Dairy", "Beef", "Pigs", "Sheep"),
    limits = c("DAIRY", "BEEF", "PIGS", "SHEEP"),
    values = sector_pal) +
    # ylab(bquote(atop("Nitrous Oxide Emissions ", "(tonnes"~CO[2]~"e)"))) +
  ylab(bquote(atop(bold(.(GHG~Emissions)), (bold(.(Kt~CO[2]~e)))))) +
  labs(
       x = "Year", 
       fill = "Sector") + 
  theme_bw() +
  theme_m.rl #+
#   theme(
#       strip.background=element_rect(colour="black",
#                                     aes(fill= c("#CC6677", "#AA4499", "#117733", "#332288")))
# )
```


# Data 
## Column {.tabset width="70%"}
```{r} 
#| title: Data (download)

datatable(carbon_data %>%
            select(-farm_area),
          filter = list(position = 'top', clear = FALSE),
          extensions = 'Buttons',
          options = list(dom = 'Bfrtip',
                         buttons = c('copy'))) %>%
  formatRound(columns = c(5:72), digits = 2, mark ="", dec.mark = ".")
```

```{r}
#| title: Data dictionary - variables

datatable(data_dict, filter = list(position = 'topleft', clear = FALSE),
          extensions = 'Buttons',
          options = list(dom = 'Bfrtip',
                         buttons = c('copy')))

```

```{r}
#| title: Data dictionary - LineItem code

datatable(other_dict, filter = list(position = 'topleft', clear = FALSE),
          extensions = 'Buttons',
          options = list(dom = 'Bfrtip',
                         buttons = c('copy')))

```


## Column {width="30%"}

### Row {height="25%"}
::: {.card title="Data download"}
```{r}
# ui <- fluidPage(
#    downloadButton("download", "Download excel file")
#  )
# 
# 
# server <- function(input, output, session) {
#   
#   data <- list(carbon_data, data_dict, other_dict)
#  
#  output$download <- downloadHandler(
#    filename = function() {
#      paste0("HAcarbon", 
#             #lastest_year, 
#             ".xlsx")
#    },
#    content = function(file) {
#      writexl::write_xlsx(data(), path = "HACarbon_2022", col_names = TRUE)
#    }
#  )
# }
# 
# shinyApp(ui,server)

```

[Downlad excel file](https://github.com/HAcarbon/dash/raw/main/docs/data/HAcarbon_master_2022.xlsx)
:::

### Row {.tabset height="75%"}

::: {.card title="Data source"}
This data comprise the output results from the [AgreCalc Farm Carbon Calculator](https://www.agrecalc.com/) for the years 2020 through to 2022. Input data was collated from across the farm for each year.

**Comments** 
- Due to the current format of the output provided by Agrecalc, there are limitations on the knowledge relating to certain assumptions or calculations which were made to results in the current presented data. Therefore data display is somewhat limited.

- Original data is in kg CO~2~e. Data presented in this dashboard has been converted to Kilotonnes (Kt) CO~2~e with the except of data presented in the map which is in tonnes (t) CO~2~e.

- Data were inputted by different staff members across each year and during this time updates have also been made to the Agrecalc calculator. Therefore, it is important to note that data may not be directly comparable. Updates will be made to address this issue.

- The current data set only focuses on the main livestock enterprises at this time due to inconsistencies in report output between years.
:::





